From: Jason Rhinelander <jason@imaginary.ca>
Date: Wed, 4 Nov 2015 19:21:51 -0500
Subject: Fix for Eigen 3.2.0/.1 compatibility

svd.rank wasn't added until 3.2.2, so just skip the rank check on
earlier versions.
---
 creativity/data/OLS.cpp | 3 +++
 creativity/data/SUR.cpp | 3 +++
 2 files changed, 6 insertions(+)

diff --git a/creativity/data/OLS.cpp b/creativity/data/OLS.cpp
index e0abcb9..2ca41ee 100644
--- a/creativity/data/OLS.cpp
+++ b/creativity/data/OLS.cpp
@@ -43,7 +43,10 @@ void OLS::solve() {
     if (n < k) throw RankError("Cannot compute OLS estimates with n < k");
 
     JacobiSVD<MatrixXd> svd(X_, ComputeThinU | ComputeThinV);
+#if EIGEN_VERSION_AT_LEAST(3,2,2)
+// svd.rank() was added in 3.2.2; for previous versions just skip the rank safety test
     if (svd.rank() < X_.cols()) throw RankError("Cannot compute OLS estimates: independent data is not full column rank (" + std::to_string(svd.rank()) + " < " + std::to_string(X_.cols()) + ")");
+#endif
 
     beta_ = svd.solve(y_);
 
diff --git a/creativity/data/SUR.cpp b/creativity/data/SUR.cpp
index 844cdbc..7dc18c9 100644
--- a/creativity/data/SUR.cpp
+++ b/creativity/data/SUR.cpp
@@ -93,7 +93,10 @@ void SUR::solve() {
     MatrixXd residuals(per_eq_rows, num_eqs);
     for (unsigned g = 0; g < num_eqs; g++) {
         JacobiSVD<MatrixXd> svd(X_[g], ComputeThinU | ComputeThinV);
+#if EIGEN_VERSION_AT_LEAST(3,2,2)
+// svd.rank() was added in 3.2.2; for previous versions just skip the rank safety test
         if (svd.rank() < k_[g]) throw RankError("Cannot compute SUR estimates: equation " + std::to_string(g) + " independent data is not full column rank (" + std::to_string(svd.rank()) + " < " + std::to_string(k_[g]) + ")");
+#endif
 
         auto y_g = y(g);
         residuals.col(g) = y_g - X_[g] * svd.solve(y_g);
